/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qt-components-symbian-build-from-source.html

\title Building Qt Quick Components for Symbian from Source

\section1 Qt Quick Components for Symbian Libraries

The Qt Quick Components are hosted in \l
{https://qt.gitorious.org/qt-components}{Qt Components Repository} and can be
built from the sources.

\section1 Building the Qt Quick Components for Symbian
These instructions detail how to build Qt Quick Components for Symbian from the 
source. The instructions work for the different ### link? \l {qt-components-symbian-getting-started.html#symbian-components-supported-platforms}{platforms}.

First, open up the command line, with the Qt tools in the system path. The \c
QTDIR variable needs to point to the Qt binaries. The configure script will
check and configure the Makefile based on the version of qmake and Qt found in
the path. The Qt SDK for Windows has command prompts for different targets and
the path is already set. The Visual Studio command prompt needs to have the Qt
binary in its path.

On Windows, the 'Qt 4.7.3 for Desktop (MinGW)' prompt sets the \c QTDIR variable
to:
\code
C:\QtSDK\Desktop\Qt\4.7.3\mingw
\endcode

\note These instructions were written for the MinGW that came with the Qt SDK
for Windows. The instructions are similar for Linux, Mac OS, or the Visual
Studio tools; simply replace \c mingw32-make with \c make or \c nmake.

\target configuration step
In the Qt Quick Components repository root:

\code
configure -symbian
\endcode

After the configure step, run these two commands:
\code
mingw32-make
mingw32-make install
\endcode
These commands will install the Qt Quick Components for Symbian libraries into
the directories where Qt may find them.

\code
%QTDIR%/imports/Qt/labs/components
%QTDIR%/imports/com/nokia/symbian
%QTDIR%/imports/com/nokia/extras
\endcode

\section2 Building the Documentation

The Symbian documentation is generated by running the following commands after
the \l {configuration step}:
\code
mingw32-make docs
\endcode

The documentation will reside in \c{doc/html}. In addition, a \c{qch} file will
be generated and placed in \c{doc/qch}. Qt Creator and Qt Assistant can load
the documentation by importing the qch file.


*/

